{"componentChunkName":"component---src-templates-lesson-template-js","path":"/unit-1/lesson-5","webpackCompilationHash":"6cc38d3bae4dd9ed2c4d","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/unit-1/lesson-5\",\n  \"start\": \"2019-09-11T00:00:00.000Z\",\n  \"end\": \"2019-09-12T00:00:00.000Z\",\n  \"title\": \"Lesson 1.05 - Static Methods and Method Calls (1/2)\",\n  \"slides\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = Layout;\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Procedural Decomposition\"), mdx(\"h3\", null, \"Baking Sugar Cookies (bad version)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\\f\"\n  }), \"// This program displays a delicious recipe for baking cookies.\\npublic static void main(String[] args) {\\n  // Step 1: Make the cake batter.\\n  System.out.println(\\\"Mix the dry ingredients.\\\");\\n  System.out.println(\\\"Cream the butter and sugar.\\\");\\n  System.out.println(\\\"Beat in the eggs.\\\");\\n  System.out.println(\\\"Stir in the dry ingredients.\\\");\\n\\n  // Step 2a: Bake cookies (first batch).\\n  System.out.println(\\\"Set the oven temperature.\\\");\\n  System.out.println(\\\"Set the timer.\\\"); \\n  System.out.println(\\\"Place a batch of cookies into the oven.\\\");\\n  System.out.println(\\\"Allow the cookies to bake.\\\");\\n\\n  // Step 2b: Bake cookies (second batch).\\n  System.out.println(\\\"Set the oven temperature.\\\");\\n  System.out.println(\\\"Set the timer.\\\");\\n  System.out.println(\\\"Place a batch of cookies into the oven.\\\");\\n  System.out.println(\\\"Allow the cookies to bake.\\\");\\n\\n  // Step 3: Decorate the cookies.\\n  System.out.println(\\\"Mix ingredients for frosting.\\\");\\n  System.out.println(\\\"Spread frosting and sprinkles.\\\");\\n}\\n\")), mdx(\"h3\", null, \"Baking Sugar Cookies (good version)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\\f\"\n  }), \"// This program displays a delicious recipe for baking cookies.\\npublic class BakeCookies3 {\\n  public static void main(String[] args) {\\n    makeBatter();\\n    System.out.println(\\\"Set the oven temperature.\\\");\\n    bake(); // 1st batch\\n    bake(); // 2nd batch\\n    decorate();\\n  }\\n  // Step 1: Make the cake batter.\\n  public static void makeBatter() {\\n    System.out.println(\\\"Mix the dry ingredients.\\\");\\n    System.out.println(\\\"Cream the butter and sugar.\\\");\\n    System.out.println(\\\"Beat in the eggs.\\\");\\n    System.out.println(\\\"Stir in the dry ingredients.\\\");\\n  }\\n  // Step 2: Bake a batch of cookies.\\n  public static void bake() {\\n    System.out.println(\\\"Set the timer.\\\");\\n    System.out.println(\\\"Place batch into oven.\\\");\\n    System.out.println(\\\"Allow the cookies to bake.\\\");\\n  }\\n  // Step 3: Decorate the cookies.\\n  public static void decorate() {\\n    System.out.println(\\\"Mix ingredients for frosting.\\\");\\n    System.out.println(\\\"Spread frosting and sprinkles.\\\");\\n  }\\n}\\n\")), mdx(\"h2\", null, \"Homework\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tricky\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Strange \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Confusing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lots-of-Errors\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"path":"/unit-1/lesson-5","title":"Lesson 1.05 - Static Methods and Method Calls (1/2)","attachments":null,"slides":true}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}