{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/apcs/slides/unit-1/lesson-3/print","webpackCompilationHash":"87aec0580bde54de7d11","result":{"data":{"deck":{"id":"78299432-d418-5950-a00f-1e57e252b9d4","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = slideTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Strings and Console Output\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Brief History of Java\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Originally released in 1995 by Sun Microsystems (now part of Oracle)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wrote programs for \\\"embedded devices\\\", specifically TV's\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Turns out, this makes it ideal for writing programs for the internet\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Key Characteristics of Java\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write once, run anywhere\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automatic memory management\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Object-oriented\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Setup Eclipse\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Your first program!\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public static void main(String[] args){\\n  System.out.println(\\\"Hello World!\\\");\\n}\\n\")), mdx(\"p\", null, \"Put this inside the class curly braces { }\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Things to keep in mind!\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't forget the semicolon ( ; ) after the statement!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Capital and lower case letters matter!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Parentheses, square brackets, and curly braces are different! ( ) { } \", \"[ ]\")), mdx(\"hr\", null), mdx(\"h1\", null, \"What is a string?\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"\\\"Hello World\\\"\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A sequence of characters is called a string.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Strings in Java are enclosed in double-quotes.\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Identify the string in\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"System.out.println(\\\"Hello World\\\");\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"println vs print\"), mdx(\"p\", null, \"Replace: \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"System.out.println(\\\"\\\");\\n\")), mdx(\"p\", null, \"with: \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"System.out.print(\\\"\\\");\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"What happened?\"), mdx(\"h3\", null, \"What do you think is different?\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Escape Sequences\"), mdx(\"p\", null, \"Why do you think we need escape sequences (or what are they!)?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\\n new line\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\\\\\" quotation mark\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\\t tab\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\\\", \"\\\\\", \" backslash\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Why do we need this one?\")))), mdx(\"hr\", null), mdx(\"h2\", null, \"Practice-it\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"legalIdentifiers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"outputSyntax\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"confounding\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Archie\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"downwardSpiral\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DoubleSlash\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sally\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"TestOfKnowledge\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Challenge: ASCII Pikachu\"), mdx(\"p\", null, \"Write a program that outputs the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-raw\"\n  }), \"Pikachu welcomes you to the world of Pokemon!\\n\\n(\\\\ __/)\\n(o^.^)\\nz(_(\\\")(\\\")\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"78299432-d418-5950-a00f-1e57e252b9d4","slug":"/apcs/slides/unit-1/lesson-3","title":"Strings and Console Output"}}}