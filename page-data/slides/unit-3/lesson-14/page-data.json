{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/slides/unit-3/lesson-14","matchPath":"/slides/unit-3/lesson-14/*","webpackCompilationHash":"7e2dd7f318c19ff3a520","result":{"data":{"deck":{"id":"0299210a-3946-5524-b074-510c79cf1a52","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = slideTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Random Numbers\"), mdx(\"hr\", null), mdx(\"h2\", null, \"When do we use randomization?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create an enemy that spawns after some random amount of time, but between 7\\nand 23 seconds.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Pick a random item from a list of 100 words the user needs to guess in Hangman\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create a new username between 6 and 10 characters picking randomly what each\\ncharacter is, from lower/capital letters and numbers.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Make a ball bounce, but not precisely, by adding random angles to the bounce.\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Let's make some random numbers:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"How do we make a random object?\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"// Top of file \\nimport java.util.Random;\\n\\nRandom r = new Random();\\n\\nresult = r.nextInt(6); //Gives a number between 0 and 5\\nresult = r.nextInt(6) + 1; //between 1 and 6.\\nSystem.out.println(\\\"You rolled a \\\" + result);\\n\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.oracle.com/javase/8/docs/api/java/util/Random.html\"\n  }), \"Java Random Docs\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Think-Pair-Share\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write an expression that simulates a roll of a 20-sided dice.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write an expression that yields a random number between 0.0 and 1.0.\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Think-Pair-Share\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"Random r = new Random();\\nint diceRoll = r.nextInt(20) + 1;\\ndouble randDouble = r.nextDouble() // or Math.random()\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Lab\"), mdx(\"p\", null, \"Using everything we have learned so far in Unit 3 (loops, conditions, Scanner, Random)\\ntry to put these pieces together to create some sort of game. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Criteria\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Must have at least one while loop \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Must take user input through the scanner \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Must use a static method with parameters AND returns a value \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Must use Random numbers \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Must use conditions \")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/slides/unit-3/lesson-14/*","isCreatedByStatefulCreatePages":false,"id":"0299210a-3946-5524-b074-510c79cf1a52","slug":"/apcs/slides/unit-3/lesson-14","title":"Random Numbers"}}}