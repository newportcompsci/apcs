{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/slides/unit-3/lesson-2/print","webpackCompilationHash":"10d03d431c063907555f","result":{"data":{"deck":{"id":"aa448e4b-91cc-58f7-aedb-536906cb396e","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = slideTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Limitations of Parameters & Multiple Parameters\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public class ParameterExample{\\n\\n    public static void main (String[] args) {\\n        int x = 17;\\n\\n        doubleNumber(x);\\n        System.out.println(\\\"x = \\\" + x);\\n        System.out.println();\\n\\n        int number = 42;\\n\\n        doubleNumber(number);\\n\\n        System.out.println(\\\"number = \\\" + number);\\n    }\\n\\n    public static void doubleNumber(int number) {\\n        System.out.println(\\\"Initial value = \\\" +  number);\\n        number = number * 2;\\n        System.out.println(\\\"Final value =  \\\" + number);\\n    }\\n}\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Using Multiple Parameters\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-raw\"\n  }), \"public static <type> <name> (<type> <name>, <type> <name>, ... <type> <name>) {\\n    <statement>;\\n    <statement>;\\n    ...\\n    <statement>;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-raw\"\n  }), \"method name (expression, expression, expression);\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public class ParameterArt {\\n    public static void main(String[] args){\\n        writeChars('=', 20);\\n        System.out.println();\\n\\n        for (int i = 1; i <= 10; i++){\\n            writeChars('>', i);\\n            writeChars(' ', 20 - 2 * i); \\n            writeChars('<', i);\\n\\n            System.out.println();\\n        }\\n    }\\n\\n    public static void writeChars(char ch, int number) {\\n        for ( int i = 1; i <= number; i ++){ \\n         System.out.print(ch);\\n        }\\n    }\\n}\\n\")), mdx(\"hr\", null), mdx(\"p\", null, \"Worktime\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"aa448e4b-91cc-58f7-aedb-536906cb396e","slug":"/slides/unit-3/lesson-2","title":"Limitations of Parameters & Multiple Parameters"}}}