{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/slides/unit-3/lesson-6","matchPath":"/slides/unit-3/lesson-6/*","webpackCompilationHash":"0dfc9230307a2f1f101f","result":{"data":{"deck":{"id":"0f6e4d54-168d-507f-a7e2-9b3262b372f2","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = slideTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Interactive Programs & Scanner Objects\"), mdx(\"hr\", null), mdx(\"h2\", null, \"The new stuff\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"import java.util.*\\n\\nScanner userInput = new Scanner(System.in);\\n// Do stuff with scanner\\n\\nuserInput.close(); // Only do this once in main!\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Interactive programming\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"int a, b, c;\\n\\nSystem.out.println(\\\"Quadratic Formula Solver\\\");\\nSystem.out.print(\\\"a = \\\"); // Prompt\\na = userInput.nextInt();  // Get value\\n\\nSystem.out.print(\\\"b = \\\");\\nb = userInput.nextInt();\\n\\nSysetm.out.print(\\\"c = \\\");\\nc = userInput.nextInt();\\n\\nquadraticFormula(a, b, c); // Asume this was defined...\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"next vs nextLine\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"next() can read the input only till the space. It can\\u2019t read two words separated by space. Also, next() places the cursor in the same line after reading the input.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"nextLine() reads input including space between the words (that is, it reads till the end of line n). Once the input is read, nextLine() positions the cursor in the next line.\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"System.out.print(\\\"Username: \\\");\\nString username = userInput.nextLine();\\nSystem.out.print(\\\"Password: \\\");\\nString password = userInput.nextLine();\\n\\nboolean isValid = password.equals(\\\"password\\\"); // Will this work?\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/slides/unit-3/lesson-6/*","isCreatedByStatefulCreatePages":false,"id":"0f6e4d54-168d-507f-a7e2-9b3262b372f2","slug":"/apcs/slides/unit-3/lesson-6","title":"Interactive Programs & Scanner Objects"}}}