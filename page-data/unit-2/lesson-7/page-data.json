{"componentChunkName":"component---src-templates-lesson-template-js","path":"/unit-2/lesson-7","webpackCompilationHash":"c81761cfd2469710474c","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/unit-2/lesson-7\",\n  \"start\": \"2019-09-30T00:00:00.000Z\",\n  \"end\": \"2019-09-30T00:00:00.000Z\",\n  \"title\": \"Lesson 2.07 - Scope and Pseudocode\",\n  \"slides\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = Layout;\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Identifying Scope Errors\"), mdx(\"h3\", null, \"Problem 2a\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public static void main(String[] args) {\\n    for (int i = 0; i < 10; i++) {\\n        int squared = i * i;\\n        System.out.println(i + \\\" squared is \\\" + squared);\\n    }\\n\\n    // Error! squared was declared in the for loop. \\n    System.out.println(\\\"The last one was \\\" + squared);\\n}\\n\")), mdx(\"h3\", null, \"Problem 2b\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public static void interestingMethod() {\\n    int x = 1;\\n    int y = 2;\\n    multiplyPlease();\\n}\\n\\npublic static void main(String[] args) {\\n    // Error! Both x and y are declared inside of \\n    // the interesting method. \\n    System.out.println(\\\"x times y is \\\" + (x * y));\\n}\\n\")), mdx(\"h3\", null, \"Problem 2c\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public static void main(String[] args) {\\n    System.out.println(\\\"About to do the computation!\\\");\\n    doComputation();\\n\\n    // Error! x is declared in the do computation method. \\n    System.out.println(\\\"The result of the computation is \\\" + x);\\n}\\n\\npublic static void doComputation() {\\n    int x = 1;\\n    for (int i = 0; i < 100; i++) {\\n        x += 3;\\n        x *= 2;\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Problem 2d\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public static void main(String[] args) {\\n    int i = 0; \\n    System.out.println(\\\"Let's get started.\\\");\\n\\n    // Error! i has already been declared. \\n    for (int i = 0; i < 10; i++) {\\n        System.out.println(\\\"My favorite number is \\\" + i);\\n    }\\n\\n    System.out.println(\\\"I guess I have a lot of favorite numbers!\\\");\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"path":"/unit-2/lesson-7","title":"Lesson 2.07 - Scope and Pseudocode","attachments":null,"slides":true}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}