{"componentChunkName":"component---src-templates-lesson-template-js","path":"/unit-2/lesson-5","webpackCompilationHash":"e77a937e020abbaeda8a","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/unit-2/lesson-5\",\n  \"start\": \"2019-09-25T00:00:00.000Z\",\n  \"end\": \"2019-09-26T00:00:00.000Z\",\n  \"title\": \"Lesson 2.05 - For loops\",\n  \"slides\": true,\n  \"attachments\": [\"./for-loop.docx\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = Layout;\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Challenge\"), mdx(\"p\", null, \"The goal is to write a program that calculates the running sum from 1 to N. \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public class Solution {\\n  public static final int N = 10000;\\n\\n  public static void main(String[] args) {\\n    System.out.println(\\\"Calculating the running sum from 1 to \\\" + N);\\n    calculateRunningSum();\\n  }\\n\\n  public static void calculateRunningSum() {\\n    int runningSum = 0;\\n\\n    for (int i = 0; i <= N; i++) {\\n      runningSum += i;\\n      System.out.println(runningSum);\\n    }\\n  }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"path":"/unit-2/lesson-5","title":"Lesson 2.05 - For loops","attachments":[{"publicURL":"/apcs/static/for-loop-a4ccb858a39a269a270ff81aa8de031d.docx","name":"for-loop"}],"slides":true}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}