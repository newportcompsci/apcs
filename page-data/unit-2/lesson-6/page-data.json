{"componentChunkName":"component---src-templates-lesson-template-js","path":"/unit-2/lesson-6","webpackCompilationHash":"d9427811764c6801f76b","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/unit-2/lesson-6\",\n  \"start\": \"2019-09-27T00:00:00.000Z\",\n  \"end\": \"2019-09-27T00:00:00.000Z\",\n  \"title\": \"Lesson 2.06 - Nested For loops\",\n  \"slides\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = Layout;\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Challenge\"), mdx(\"p\", null, \"Write code that counts to 1000 in 11 lines.\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The Catch\"), \"...You cannot use a loop that executes more than 10 times.\"), mdx(\"h3\", null, \"Solution A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public class SolutionA {\\n    public static void main(String[] args) {\\n        for (int i = 0; i < 10; i++) {\\n            for (int j = 0, j < 10; j++) {\\n                for (int k = 0; k < 10; k++) {\\n                    System.out.println(100 * i + 10 * j + k + 1);\\n                }\\n            }\\n        }\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Solution B\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public class SolutionB {\\n    public static void main(String[] args) {\\n        for (int i = 0, sum = 0; i < 10; i++) {\\n            for (int j = 0, j < 10; j++) {\\n                for (int k = 0; k < 10; k++) {\\n                    System.out.println(++sum);\\n                }\\n            }\\n        }\\n    }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"path":"/unit-2/lesson-6","title":"Lesson 2.06 - Nested For loops","attachments":null,"slides":true}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}