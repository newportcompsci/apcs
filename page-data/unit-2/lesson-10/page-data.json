{"componentChunkName":"component---src-templates-lesson-template-js","path":"/unit-2/lesson-10","webpackCompilationHash":"87aec0580bde54de7d11","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/unit-2/lesson-10\",\n  \"start\": \"2019-10-07T00:00:00.000Z\",\n  \"end\": \"2019-10-08T00:00:00.000Z\",\n  \"title\": \"Lesson 2.10 - Review\",\n  \"slides\": false,\n  \"attachments\": [\"./review.docx\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = Layout;\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Vocabulary\"), mdx(\"h2\", null, \"Problem 2\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"boolean isValid;\\n\")), mdx(\"h2\", null, \"Problem 3\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"PI = 3.14159;\\n\")), mdx(\"h2\", null, \"Problem 4\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"count++;\\n++count; // OR\\ncount += 1; // OR\\ncount = count + 1; // OR\\n\")), mdx(\"h2\", null, \"Problem 5 and 6\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"1 + 2.0 + 3 + \\\"4\\\" + 5 = \\\"6.045\\\"\\n\\n(int)1.123 + 4 % 3 = 2\\n\")), mdx(\"h2\", null, \"Problem 7\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"    public static void mystery1() {\\n        int c = 11; // Start of C\\n        \\n        System.out.println(\\\"Mystery value 1 \\\" + c); // End of C\\n    }\\n    \\n    public static void main(String[] args) {\\n        System.out.println(\\\"Welcome!\\\");\\n        \\n        int a = 10; // Start of A\\n        \\n        for (int i = 0; i < a; i++) {\\n            int b = a + i; // Start of B\\n            \\n            System.out.println(b); // End of B\\n        }\\n        \\n        mystery1(); // End of A\\n    }\\n\")), mdx(\"h2\", null, \"Problem 8\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"    public static void main(String[] args) {\\n        int x = 10;\\n        int y = 20;\\n        double z = 30.4;\\n        \\n        y = x - 8;\\n        z = (z + x) * y;\\n        x = ((int)z + 1) % x;\\n        \\n        System.out.println(\\\"The value of x is \\\" + x);\\n    }\\n\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Output\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-raw\"\n  }), \"The value of x is 2\\n\")), mdx(\"h2\", null, \"Problem 9\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"    public static void main(String[] args) {\\n        int i = 0;\\n        for (i = 0; i < 3; i++) // No brackets!\\n            System.out.println(i);\\n            for (int j = 1; j <= 2; j++) {\\n                System.out.println(j + i);\\n            }\\n    }\\n\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Output\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-raw\"\n  }), \"0\\n1\\n2\\n4\\n5\\n\")), mdx(\"h2\", null, \"Problem 10\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public static void main(String[] args) {\\n        int count = 0;\\n        for (int i = 0; i < 3; i++); { // Remember the semi-colon!\\n            for (int j = 0; j < 3; j++); {\\n                count++;\\n                System.out.println(\\\"The count is \\\" + count);\\n            }\\n        }\\n    }\\n\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Output\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-raw\"\n  }), \"The count is 1\\n\")), mdx(\"h2\", null, \"Problem 11\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"public static void main(String[] args) {\\n        for (int line = 1; line <= 4; line++) {\\n            int numDash = -line + 5;\\n            int numStar = 2*line;\\n            \\n            for (int i = 0; i < numDash; i++) {\\n                System.out.print(\\\"-\\\");\\n            }\\n            \\n            for (int i = 0; i < numStar; i++) {\\n                System.out.print(\\\"*\\\");\\n            }\\n\\n            for (int i = 0; i < numDash; i++) {\\n                System.out.print(\\\"-\\\");\\n            }\\n            \\n            System.out.println();\\n        }\\n\\n        for (int line = 3; line > 0; line--) {\\n            int numDash = -line + 5;\\n            int numStar = 2*line;\\n            \\n            for (int i = 0; i < numDash; i++) {\\n                System.out.print(\\\"-\\\");\\n            }\\n            \\n            for (int i = 0; i < numStar; i++) {\\n                System.out.print(\\\"*\\\");\\n            }\\n\\n            for (int i = 0; i < numDash; i++) {\\n                System.out.print(\\\"-\\\");\\n            }\\n            \\n            System.out.println();\\n        }\\n    }\\n\\n\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Output\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-raw\"\n  }), \"----**----\\n---****---\\n--******--\\n-********-\\n--******--\\n---****---\\n----**----\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"path":"/unit-2/lesson-10","title":"Lesson 2.10 - Review","attachments":[{"publicURL":"/apcs/static/review-e2925a9b1289b26377dd13347913d4ce.docx","name":"review"}],"slides":false}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}