{"componentChunkName":"component---src-templates-lesson-template-js","path":"/unit-2/lesson-8","webpackCompilationHash":"0dfc9230307a2f1f101f","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/unit-2/lesson-8\",\n  \"start\": \"2019-10-01T00:00:00.000Z\",\n  \"end\": \"2019-10-03T00:00:00.000Z\",\n  \"title\": \"Lesson 2.08 - Start Project\",\n  \"slides\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = Layout;\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Unit 2 Project\"), mdx(\"p\", null, \"In this project you have the opportunity to demonstrate your knowledge of for loops and nested for loops to create and ASCII art version of the Space Needle. Using the already created file named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SpaceNeedle.java\"), \" write a program that outputs an ASCII art version of the Space Needle of varying size (based on the Class Constant SIZE). The goal of this project is to use ONLY what we have learned in Unit 2 (and prior) to create the Space Needle. Your code must be broken up into methods as appropriate and have comments describing what each method does.  \"), mdx(\"p\", null, \"For those of you who have dabbled in coding before, try to contain your code to just what we have discussed in this (and previous) unit. \"), mdx(\"h2\", null, \"Sample Output\"), mdx(\"h3\", null, \"SIZE=2\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"      ||\\n      ||\\n   __/||\\\\__\\n__/:::||:::\\\\__\\n|\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"|\\n\\\\_/\\\\/\\\\/\\\\/\\\\/\\\\_/\\n  \\\\_/\\\\/\\\\/\\\\_/\\n      ||\\n      ||\\n     ||||\\n     ||||\\n     ||||\\n     ||||\\n   __/||\\\\__\\n__/:::||:::\\\\__\\n|\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"|\\n\\n\")), mdx(\"h3\", null, \"SIZE=3\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"         ||\\n         ||\\n         ||\\n      __/||\\\\__\\n   __/:::||:::\\\\__\\n__/::::::||::::::\\\\__\\n|\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"|\\n\\\\_/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\_/\\n  \\\\_/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\_/\\n    \\\\_/\\\\/\\\\/\\\\/\\\\_/\\n         ||\\n         ||\\n         ||\\n       |%||%|\\n       |%||%|\\n       |%||%|\\n       |%||%|\\n       |%||%|\\n       |%||%|\\n       |%||%|\\n       |%||%|\\n       |%||%|\\n      __/||\\\\__\\n   __/:::||:::\\\\__\\n__/::::::||::::::\\\\__\\n|\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"|\\n\\n\")), mdx(\"h3\", null, \"SIZE=4\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"            ||\\n            ||\\n            ||\\n            ||\\n         __/||\\\\__\\n      __/:::||:::\\\\__\\n   __/::::::||::::::\\\\__\\n__/:::::::::||:::::::::\\\\__\\n|\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"|\\n\\\\_/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\_/\\n  \\\\_/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\_/\\n    \\\\_/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\_/\\n      \\\\_/\\\\/\\\\/\\\\/\\\\/\\\\_/\\n            ||\\n            ||\\n            ||\\n            ||\\n         |%%||%%|\\n         |%%||%%|\\n         |%%||%%|\\n         |%%||%%|\\n         |%%||%%|\\n         |%%||%%|\\n         |%%||%%|\\n         |%%||%%|\\n         |%%||%%|\\n         |%%||%%|\\n         |%%||%%|\\n         |%%||%%|\\n         |%%||%%|\\n         |%%||%%|\\n         |%%||%%|\\n         |%%||%%|\\n         __/||\\\\__\\n      __/:::||:::\\\\__\\n   __/::::::||::::::\\\\__\\n__/:::::::::||:::::::::\\\\__\\n|\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"|\\n\\n\")), mdx(\"h2\", null, \"Hints\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Your String should end with one newline character.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We have provided you with a couple of tests that you can check your program with. To run these tests right click on the 'test' folder under your project, go down to 'Run As' and select 'JUnit Test'\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If there are errors in these tests you can see the differences of what we expect vs. what you output by clicking on the failing test, then double clicking on the first line in the 'Failure Trace' window.\")), mdx(\"h2\", null, \"Learning Targets\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I can demonstrate an understanding of procedural decomposition by writing static method declarations and calling them within other methods.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I can show my understanding of legal identifiers within the bounds of style guides discussed in class so far.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I can produce a text output in the console using strings while understanding the proper way to display special string characters.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I can show my understanding of for loops and nested for loops by using them to reduce repetition in my program.\")), mdx(\"h2\", null, \"Rubric (20 pts)\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"Category\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"4\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"3\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"2\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"1\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"Demonstrates Learning Targets (10pts)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Meets all targets\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Meets only 3\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Meets only 2\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Meets only 1 or doesn't show any attempt at the learning targets\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"Style (5pts)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Demonstrates a strong understanding with flawless style\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Minor style errors\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Demonstrates low understanding of style\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Code is unreadable\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"Executes Properly (5pts)\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Runs without any errors and output is correct for all sizes\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Compiles and runs, but output is incorrect in 1 or more sizes\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Doesn't compile but due to minor errors\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Large syntax errors left in the code\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"path":"/unit-2/lesson-8","title":"Lesson 2.08 - Start Project","attachments":null,"slides":false}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}